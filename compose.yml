version: "3.9"

volumes:
  db_data:
networks:
  api-db: {}
  view-api: {}

services:
  postgres:
    container_name: postgres_db
    image: postgres:16
    restart: always
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ecommerce_products -U postgres"]
      timeout: 20s
      retries: 10
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./db/:/docker-entrypoint-initdb.d
    networks:
      - api-db
    deploy:
      endpoint_mode: dnsrr
    ports:
      - 5432:5432

  api:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - .env
    volumes:
      - ./backend/:/app/backend/
    networks:
      - api-db
      - view-api
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - 3000:3000

  adminer:
    container_name: adminer
    image: adminer:latest
    restart: always
    environment:
      ADMINER_DEFAULT_SERVER: db # postgres
    networks:
      - api-db
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - 8080:8080
